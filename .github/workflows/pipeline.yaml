name: pipeline
on: push

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: test
        uses: actions-rs/cargo@v1
        with:
          command: test

  build-push:
    name: Build and push image
    runs-on: ubuntu-latest
    if: "github.ref == 'refs/heads/main'"
    needs: checks
    steps:
      - uses: actions/checkout@v2
      - run: echo "IMAGE=ghcr.io/${GITHUB_REPOSITORY}:$(git log -1 --pretty=%ad --date=format:%Y-%m-%d)-$(git log --pretty=format:'%h' -n 1)" >> $GITHUB_ENV
      - run: docker build -t $IMAGE .
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: docker push $IMAGE

  nais-yaml:
    name: Release to nais-yaml
    runs-on: ubuntu-latest
    if: "github.ref == 'refs/heads/main'"
    needs: build-push
    steps:
      - uses: actions/checkout@v2
      - run: echo "TAG=$(git log -1 --pretty=%ad --date=format:%Y-%m-%d)-$(git log --pretty=format:'%h' -n 1)" >> $GITHUB_ENV
      - name: deploy to prod
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/nais.yaml,nais/alert.yaml
          VAR: TAG=${{ env.TAG }}

